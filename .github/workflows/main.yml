name: Continuous Deployment
on:
  push:
    branches: master
jobs:
#========================================================================================  
  build-frontend:
    name: Build Frontend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Use Node.js 10.x
      uses: actions/setup-node@v1
      with:
        node-version: 10.x
        
    - name: Install Dependencies
      run: yarn --cwd CoronaFrontend install

    - name: Build
      run: yarn --cwd CoronaFrontend run build

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: frontend
        path: CoronaFrontend/dist
#======================================================================================== 
  build-backend:
    name: Build Backend
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('CoronaBackend/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8
        server-id: github
        settings-path: ${{ github.workspace }}

    - name: Compile
      run: mvn compile --file CoronaBackend/pom.xml

    - name: Test
      run: mvn test --file CoronaBackend/pom.xml

    - name: Package
      run: mvn package --file CoronaBackend/pom.xml

    - name: Upload artifact
      uses: actions/upload-artifact@v1.0.0
      with:
        name: backend
        path: CoronaBackend/target/CoronaBackend-1.0-SNAPSHOT.jar
#======================================================================================== 
#======================================================================================== 
  deploy-frontend:
    name:  Deploy Frontend
    needs: [build-frontend]
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v1.0.0
        with:
          name: frontend
          path: artifact
          
      - name: SSH deploy files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          password: ${{ secrets.REMOTE_PASSWORD }}
          source: "artifact/"
          target: ${{ secrets.REMOTE_FRONTEND_TARGET }}
          strip_components: 1
